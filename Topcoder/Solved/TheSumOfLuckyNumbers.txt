PROBLEM STATEMENT

John thinks 4 and 7 are lucky digits, and all other digits are not lucky.  A lucky number is a number that contains only lucky digits in decimal notation.



Some numbers can be represented as a sum of only lucky numbers.  Given an int n, return a vector <int> whose elements sum to exactly n.  Each element of the vector <int> must be a lucky number.  If there are multiple solutions, only consider those that contain the minimum possible number of elements, and return the one among those that comes earliest lexicographically.  A vector <int> a1 comes before a vector <int> a2 lexicographically if a1 contains a smaller number at the first position where they differ.  If n cannot be represented as a sum of lucky numbers, return an empty vector <int> instead.



DEFINITION
Class:TheSumOfLuckyNumbers
Method:sum
Parameters:int
Returns:vector <int>
Method signature:vector <int> sum(int n)


CONSTRAINTS
-n will be between 1 and 1,000,000, inclusive.


EXAMPLES

0)
11

Returns: {4, 7 }

It is simple: 11 = 4 + 7.

1)
12

Returns: {4, 4, 4 }

Now we need three summands to get 12.

2)
13

Returns: { }

And now we can not get 13 at all.

3)
100

Returns: {4, 4, 4, 44, 44 }


